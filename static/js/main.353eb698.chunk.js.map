{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForm","text","setText","useState","loading","setLoading","imageFile","setImageFile","Fragment","style","color","heading","backgroundColor","accept","onChange","e","file","target","files","startsWith","showAlert","value","event","rows","disabled","length","handleUpClick","newText","toUpperCase","handleLoClick","toLowerCase","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","handleConvertImage","Tesseract","recognize","then","_ref","data","catch","err","handleClearClick","filter","element","About","myStyle","aria-labelledby","data-bs-parent","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","Router","document","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.353eb698.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">About Us</Link>\n                        </li>\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\nimport Tesseract from 'tesseract.js';\n\nexport default function TextForm(props) {\n\n    const [text, setText] = useState(''); \n    const [loading, setLoading] = useState(false);\n    const [imageFile, setImageFile] = useState(null);\n\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const handleImageUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type.startsWith('image/')) {\n            setImageFile(file);\n            props.showAlert(\"Image selected! Click Convert to extract text.\", \"success\");\n        } else {\n            props.showAlert(\"Please upload a valid image file.\", \"warning\");\n        }\n    };\n\n    const handleConvertImage = () => {\n        if (!imageFile) {\n            props.showAlert(\"No image selected.\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        Tesseract.recognize(\n            imageFile,\n            'eng',\n        ).then(({ data: { text } }) => {\n            setText(text);\n            setLoading(false);\n            props.showAlert(\"Text extracted from image!\", \"success\");\n        }).catch(err => {\n            setLoading(false);\n            props.showAlert(\"Failed to extract text from image.\", \"danger\");\n        });\n    };  \n\n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            {/* Image Upload */}\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Upload Image for Text Extraction</label>\n                <input type=\"file\" style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} className=\"form-control\" accept=\"image/*\" onChange={handleImageUpload} />                \n            </div>\n            <div className=\"mb-3\">\n                <textarea\n                    className=\"form-control\"\n                    value={text}\n                    onChange={handleOnChange}\n                    style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }}\n                    id=\"myBox\"\n                    rows=\"8\"\n                ></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleConvertImage} disabled={!imageFile || loading}>\n                    {loading ? 'Converting...' : 'Convert to Text'}\n            </button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function About(props) {\n\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // }) \n    let myStyle = {\n        color: props.mode ==='dark'?'white':'#042743',\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white', \n    }\n    \n    return (\n        <div className=\"container\">\n            <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>About Us</h1>\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                    <strong>Analyze Your text </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \n\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                    <strong>Free to use </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                    <strong>Browser Compatible </strong>\n                    </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                    <div className=\"accordion-body\" style={myStyle}>\n                    This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\n\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About mode={mode} />} />\n            <Route path=\"/\" element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"\n                mode={mode}\n              />\n            } />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client'; // updated import\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}